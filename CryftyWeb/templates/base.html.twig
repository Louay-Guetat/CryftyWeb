<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>

        {% block stylesheets %}
            <!-- CSS -->
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
            <link rel="stylesheet" href={{ asset('css/bootstrap-reboot.min.css') }}>
            <link rel="stylesheet" href={{ asset('css/bootstrap-grid.min.css') }}>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.13.3/css/selectize.bootstrap4.min.css" integrity="sha512-MMojOrCQrqLg4Iarid2YMYyZ7pzjPeXKRvhW9nZqLo6kPBBTuvNET9DBVWptAo/Q20Fy11EIHM5ig4WlIrJfQw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
            <link rel="stylesheet" href={{ asset('css/owl.carousel.min.css') }}>
            <link rel="stylesheet" href={{ asset('css/magnific-popup.css') }}>
            <link href="{{ asset('adminAssets/lib/font-awesome/css/font-awesome.css')}}" rel="stylesheet" />
            <link rel="stylesheet" href={{ asset('css/select2.min.css') }}>
            <link rel="stylesheet" href={{ asset('css/main.css') }}>

            <!-- Favicons -->
            <link rel="icon" type="image/png" href={{ asset('img/logoNoText.png') }} sizes="32x32">
            <link rel="apple-touch-icon" href={{ asset('img/logoNoText.png') }}>

        {% endblock %}


    </head>
    <body>


        {% for message in app.flashes('success') %}
            <div class="alert alert-success " style="margin-top: 5rem"> {{ message }} </div>
        {% endfor %}

        {% include 'shared/_header.html.twig' %}
        {% block body %}{% endblock %}
        {% include 'shared/_footer.html.twig' %}



        {% block javascripts %}
            <script src="{{ asset('js/jquery-3.5.1.min.js') }}"></script>
            <script src="{{ asset('js/bootstrap.bundle.min.js') }}"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/selectize.js/0.12.6/js/standalone/selectize.min.js" integrity="sha256-+C0A5Ilqmu4QcSPxrlGpaZxJ04VjsRjKu+G82kl5UJk=" crossorigin="anonymous"></script>
            <script src="{{ asset('js/owl.carousel.min.js') }}"></script>
            <script src="{{ asset('js/jquery.magnific-popup.min.js') }}"></script>
            <script src="{{ asset('js/select2.min.js') }}"></script>
            <script src="{{ asset('js/smooth-scrollbar.js') }}"></script>
            <script src="{{ asset('js/jquery.countdown.min.js') }}"></script>
            <script src="{{ asset('js/main.js') }}"></script>
            <script src="https://js.stripe.com/v3/"></script>
            <script src="//code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
            <script src="{{ asset('bundles/pugxautocompleter/js/autocompleter-jqueryui.js') }}"></script>
            <script>


                $(document).ready(function () {
                    $('#select-state').selectize({
                        sortField: 'text'
                    });
                });
                $('#grid-view').hide();
                $('#list-view').hide();
                $(document).ready(function (){
                    let view = localStorage.getItem('view');
                    if(view == 'list'){
                        $('#grid-view').hide();
                        $('#list-view').show();
                    }else {
                        $('#grid-view').show();
                        $('#list-view').hide();
                    }

                })
                $('.list-view-button').click(function (){
                    $('#grid-view').hide();
                    $('#list-view').show();
                    localStorage.setItem('view','list');
                });
                $('.grid-view-button').click(function (){
                    $('#grid-view').show();
                    $('#list-view').hide();
                    localStorage.setItem('view','grid');
                });


                $(".custom-file-input").on("change", function() {
                    var fileName = $(this).val().split("\\").pop();
                    $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
                });

                $(".floating-button").click(function(){
                    $(this).closest('.container-wa').toggleClass('is-opened');
                })
            </script>
            <script>
                $(document).ready(function () {
                    'use strict';
                    $('#form_titre').autocompleter({
                        url_list: '/search-article',
                        url_get: '/?term='
                    });


                    $("#ui-id-1").click(function(){
                        var id = $("#form_titre").val();

                        if(id.toString().length > 0){
                            $(location).attr('href', '/article/'+id.toString());
                        }
                    })

                });
            </script>
    {# Filtrer les subCategory par leurs category #}
            <script>
                window.onload = () =>{
                    let category = document.querySelector("#ajout_nft_category");
                    category.addEventListener("change",function(){
                        let form = this.closest("form");
                        let data = this.name + "=" + this.value;

                        fetch(form.action,{
                            method: form.getAttribute("method"),
                            body: data,
                            headers: {
                                "Content-Type": "application/x-www-form-urlencoded; charset:UTF-8"
                            }
                        })
                        .then(response => response.text())
                        .then(html => {
                            let content = document.createElement("html");
                            content.innerHTML = html;
                            let nouveauSelect = content.querySelector("#ajout_nft_subcategory");
                            document.querySelector("#ajout_nft_subcategory").replaceWith(nouveauSelect);
                        })
                        .catch(error => {
                            console.log(error);
                        })
                    });
                }

            </script>
    {# Filtrer les subCategory par leurs category #}

    {# recherche avancé sur les produits #}
            <script>
                $(document).ready(function(){
                    $("#nftInput").on("keyup", function() {
                        var value = $(this).val().toLowerCase();
                        $("#nft .nft").filter(function() {
                            $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                        });
                    });
                });
            </script>
    {# recherche avancé sur les produits #}

            <script>
                function sortNfts(n) {
                    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                    table = document.getElementById("nftRanking");
                    switching = true;
                    //Set the sorting direction to ascending:
                    dir = "asc";
                    /*Make a loop that will continue until
                    no switching has been done:*/
                    while (switching) {
                        //start by saying: no switching is done:
                        switching = false;
                        rows = table.rows;
                        /*Loop through all table rows (except the
                        first, which contains table headers):*/
                        for (i = 1; i < (rows.length - 1); i++) {
                            //start by saying there should be no switching:
                            shouldSwitch = false;
                            /*Get the two elements you want to compare,
                            one from current row and one from the next:*/
                            x = rows[i].getElementsByTagName("TD")[n];
                            y = rows[i + 1].getElementsByTagName("TD")[n];
                            /*check if the two rows should switch place,
                            based on the direction, asc or desc:*/
                            if (dir == "asc") {
                                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch= true;
                                    break;
                                }
                            } else if (dir == "desc") {
                                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch = true;
                                    break;
                                }
                            }
                        }
                        if (shouldSwitch) {
                            /*If a switch has been marked, make the switch
                            and mark that a switch has been done:*/
                            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                            switching = true;
                            //Each time a switch is done, increase this count by 1:
                            switchcount ++;
                        } else {
                            /*If no switching has been done AND the direction is "asc",
                            set the direction to "desc" and run the while loop again.*/
                            if (switchcount == 0 && dir == "asc") {
                                dir = "desc";
                                switching = true;
                            }
                        }
                    }
                }
            </script>

            <script>
                function sortOwners(n) {
                    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                        table = document.getElementById("clientRanking");
                    switching = true;
                    //Set the sorting direction to ascending:
                    dir = "asc";
                    /*Make a loop that will continue until
                    no switching has been done:*/
                    while (switching) {
                        //start by saying: no switching is done:
                        switching = false;
                        rows = table.rows;
                        /*Loop through all table rows (except the
                        first, which contains table headers):*/
                        for (i = 1; i < (rows.length - 1); i++) {
                            //start by saying there should be no switching:
                            shouldSwitch = false;
                            /*Get the two elements you want to compare,
                            one from current row and one from the next:*/
                            x = rows[i].getElementsByTagName("TD")[n];
                            y = rows[i + 1].getElementsByTagName("TD")[n];
                            /*check if the two rows should switch place,
                            based on the direction, asc or desc:*/
                            if (dir == "asc") {
                                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch= true;
                                    break;
                                }
                            } else if (dir == "desc") {
                                if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch = true;
                                    break;
                                }
                            }
                        }
                        if (shouldSwitch) {
                            /*If a switch has been marked, make the switch
                            and mark that a switch has been done:*/
                            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                            switching = true;
                            //Each time a switch is done, increase this count by 1:
                            switchcount ++;
                        } else {
                            /*If no switching has been done AND the direction is "asc",
                            set the direction to "desc" and run the while loop again.*/
                            if (switchcount == 0 && dir == "asc") {
                                dir = "desc";
                                switching = true;
                            }
                        }
                    }
                }
            </script>

            <script>
                function sortNftsNumbers(n) {
                    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                    table = document.getElementById("nftRanking");
                    switching = true;
                    //Set the sorting direction to ascending:
                    dir = "asc";
                    /*Make a loop that will continue until
                    no switching has been done:*/
                    while (switching) {
                        //start by saying: no switching is done:
                        switching = false;
                        rows = table.rows;
                        /*Loop through all table rows (except the
                        first, which contains table headers):*/
                        for (i = 1; i < (rows.length - 1); i++) {
                            //start by saying there should be no switching:
                            shouldSwitch = false;
                            /*Get the two elements you want to compare,
                            one from current row and one from the next:*/
                            x = rows[i].getElementsByTagName("TD")[n];
                            y = rows[i + 1].getElementsByTagName("TD")[n];
                            /*check if the two rows should switch place,
                            based on the direction, asc or desc:*/
                            if (dir == "asc") {
                                if (parseFloat(x.innerHTML) > parseFloat(y.innerHTML)) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch= true;
                                    break;
                                }
                            } else if (dir == "desc") {
                                if (Number(x.innerHTML) < Number(y.innerHTML)) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch = true;
                                    break;
                                }
                            }
                        }
                        if (shouldSwitch) {
                            /*If a switch has been marked, make the switch
                            and mark that a switch has been done:*/
                            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                            switching = true;
                            //Each time a switch is done, increase this count by 1:
                            switchcount ++;
                        } else {
                            /*If no switching has been done AND the direction is "asc",
                            set the direction to "desc" and run the while loop again.*/
                            if (switchcount == 0 && dir == "asc") {
                                dir = "desc";
                                switching = true;
                            }
                        }
                    }
                }
            </script>

            <script>
                function sortOwnersNumbers(n) {
                    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                    table = document.getElementById("clientRanking");
                    switching = true;
                    //Set the sorting direction to ascending:
                    dir = "asc";
                    /*Make a loop that will continue until
                    no switching has been done:*/
                    while (switching) {
                        //start by saying: no switching is done:
                        switching = false;
                        rows = table.rows;
                        /*Loop through all table rows (except the
                        first, which contains table headers):*/
                        for (i = 1; i < (rows.length - 1); i++) {
                            //start by saying there should be no switching:
                            shouldSwitch = false;
                            /*Get the two elements you want to compare,
                            one from current row and one from the next:*/
                            x = rows[i].getElementsByTagName("TD")[n];
                            y = rows[i + 1].getElementsByTagName("TD")[n];
                            /*check if the two rows should switch place,
                            based on the direction, asc or desc:*/
                            if (dir == "asc") {
                                if (Number(x.innerHTML) > Number(y.innerHTML)) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch= true;
                                    break;
                                }
                            } else if (dir == "desc") {
                                if (Number(x.innerHTML) < Number(y.innerHTML)) {
                                    //if so, mark as a switch and break the loop:
                                    shouldSwitch = true;
                                    break;
                                }
                            }
                        }
                        if (shouldSwitch) {
                            /*If a switch has been marked, make the switch
                            and mark that a switch has been done:*/
                            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                            switching = true;
                            //Each time a switch is done, increase this count by 1:
                            switchcount ++;
                        } else {
                            /*If no switching has been done AND the direction is "asc",
                            set the direction to "desc" and run the while loop again.*/
                            if (switchcount == 0 && dir == "asc") {
                                dir = "desc";
                                switching = true;
                            }
                        }
                    }
                }
            </script>


        {% endblock %}



    </body>
</html>
